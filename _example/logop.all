(define (main)
	(xor 0 1))

; xor(x, y) = or(and(not(x), y), and(x, not(y)))
(define (xor x y)
	(or (and (not x) y)
		(and x (not y))))

; not(x) = 1, if x = 0
; not(x) = 0
(define (not x)
	(if (= x 0)
		(+ 0 1)
		(+ 0 0)))

; and(x, y) = 1, if x = 1, y = 1
; and(x, y) = 0
(define (and x y)
	(if (/= x 0) 
		(if (/= y 0)
			(+ 0 1)
			(+ 0 0))
		(+ 0 0)))

; or(x, y) = 0, if x = 0, y = 0
; or(x, y) = 1
(define (or x y)
	(if (/= x 0)
		(+ 0 1)
		(if (/= y 0)
			(+ 0 1)
			(+ 0 0))))
